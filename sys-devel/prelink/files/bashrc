post_pkg_preinst() {
	ebegin "Finding any new shared objects"

	# Find all dynamic libraries, and discover their paths
	path_list=()
	dynlib_list=()
	for dynlib_path in $(scanelf -B -R -E ET_DYN -y -F "%F" ${D}); do
		dynlib_list+=("${dynlib_path}")
		dynlib_filename=$(scanelf -B -F "%f" ${dynlib_path});
		path_list+=( "${dynlib_path/${dynlib_filename}}" )
	done

	# Remove duplicates by abusing associative array
	declare -A uniq_path_list
	for n in "${path_list[@]}"; do uniq_path_list["$n"]=1; done

	# Put paths into colon separated values
	for ld_path in ${!uniq_path_list[@]}; do
		if [[ -z ${image_ld_paths} ]]; then
			image_ld_paths="${ld_path}"
		else
			image_ld_paths="${image_ld_paths}:${ld_path}"
		fi
	done
	eend $?

	#printf "LD_LIBRARY_PATH=%s\n" ${image_ld_paths}

	if [[ -n "${dynlib_list[@]}" ]]; then
		ebegin "Explicitly prelinking shared objects"
                printf '%s\n' ${dynlib_list[@]}
		prelink -qm ${PRELINKOPTS} \
			--cache-file=/etc/prelink.cache \
			--config-file=/etc/prelink.conf \
			--libs-only \
			--ld-library-path="${image_ld_paths}" \
			"${dynlib_list[@]}"
		eend $?
	fi

	ebegin "Prelinking in ${D}"
	prelink -qm ${PRELINKOPTS} \
		--cache-file=/etc/prelink.cache \
		--config-file=/etc/prelink.conf \
		--ld-library-path="${image_ld_paths}" \
		"${D}"
	eend $?
}
