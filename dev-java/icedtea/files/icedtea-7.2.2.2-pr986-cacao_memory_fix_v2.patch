# HG changeset patch
# User Andrew John Hughes <gnu_andrew@member.fsf.org>
# Date 1339542060 -3600
# Node ID e6d81fc2c9439652f903664d51a13732c73485ea
# Parent  1a9e619bc32e81697bf4200a607935ee00c8d388
PR986: Allow CACAO builds of IcedTea to be able to build IcedTea without bootstrap.

2012-06-12  Andrew John Hughes  <gnu_andrew@member.fsf.org>

	PR986
	* Makefile.am:
	(ICEDTEA_PATCHES): Add memory patch when
	building using CACAO as well, even if the
	result is not a CACAO build.
	* acinclude.m4:
	(IT_USING_CACAO): New macro; detects use of
	CACAO as the build VM so memory limits can
	be raised accordingly.
	* configure.ac: Call IT_USING_CACAO.
	* patches/cacao/launcher.patch:
	Move memory increase to memory.patch.
	* patches/cacao/memory.patch:
	Extend with additional cases in HotSpot and
	the JDK.

diff --git a/Makefile.am b/Makefile.am
--- a/Makefile.am
+++ b/Makefile.am
@@ -249,6 +249,11 @@
 	patches/cacao/launcher.patch \
 	patches/cacao/jsig.patch \
 	patches/cacao/memory.patch
+else
+if USING_CACAO
+ICEDTEA_PATCHES += \
+	patches/cacao/memory.patch
+endif
 endif
 
 if ENABLE_CACAO
diff --git a/acinclude.m4 b/acinclude.m4
--- a/acinclude.m4
+++ b/acinclude.m4
@@ -2278,3 +2278,18 @@
   AC_SUBST(PAX_COMMAND)
   AC_SUBST(PAX_COMMAND_ARGS)
 ])
+
+AC_DEFUN([IT_USING_CACAO],[
+  AC_REQUIRE([IT_FIND_JAVA])
+  AC_CACHE_CHECK([if we are using CACAO as the build VM], it_cv_cacao, [
+  if $JAVA -version 2>&1| grep '^CACAO' >&AS_MESSAGE_LOG_FD ; then
+    it_cv_cacao=yes;
+  else
+    it_cv_cacao=no;
+  fi
+  ])
+  USING_CACAO=$it_cv_cacao
+  AC_SUBST(USING_CACAO)
+  AM_CONDITIONAL(USING_CACAO, test "x${USING_CACAO}" = "xyes")
+  AC_PROVIDE([$0])dnl
+])
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -102,6 +102,7 @@
 IT_FIND_JAR
 IT_FIND_RMIC
 IT_FIND_NATIVE2ASCII
+IT_USING_CACAO
 if test "x$enable_bootstrap" = "xyes"; then
   IT_FIND_ECJ_JAR
   IT_FIND_TOOL([XSLTPROC], [xsltproc])
diff --git a/patches/cacao/launcher.patch b/patches/cacao/launcher.patch
--- a/patches/cacao/launcher.patch
+++ b/patches/cacao/launcher.patch
@@ -1,15 +1,3 @@
-diff -Nru openjdk.orig/jdk/make/docs/Makefile openjdk/jdk/make/docs/Makefile
---- openjdk.orig/jdk/make/docs/Makefile	2012-03-21 17:09:55.000000000 +0000
-+++ openjdk/jdk/make/docs/Makefile	2012-03-23 00:46:49.461847958 +0000
-@@ -73,7 +73,7 @@
- else ifeq ($(ARCH),universal)
-   MAX_VM_MEMORY = 1024
- else
--  MAX_VM_MEMORY = 512
-+  MAX_VM_MEMORY = 768
- endif
- 
- # List of all possible directories for javadoc to look for sources
 diff -Nru openjdk.orig/jdk/src/share/bin/java.c openjdk/jdk/src/share/bin/java.c
 --- openjdk.orig/jdk/src/share/bin/java.c	2012-03-21 17:09:55.000000000 +0000
 +++ openjdk/jdk/src/share/bin/java.c	2012-03-23 00:46:49.461847958 +0000
diff --git a/patches/cacao/memory.patch b/patches/cacao/memory.patch
--- a/patches/cacao/memory.patch
+++ b/patches/cacao/memory.patch
@@ -1,6 +1,85 @@
---- openjdk.orig/langtools/make/build.xml	2010-06-01 11:25:40.145287816 +0100
-+++ openjdk/langtools/make/build.xml	2010-06-21 21:48:41.000000000 +0100
-@@ -554,6 +554,7 @@
+diff -Nru openjdk.orig/hotspot/make/bsd/makefiles/rules.make openjdk/hotspot/make/bsd/makefiles/rules.make
+--- openjdk.orig/hotspot/make/bsd/makefiles/rules.make	2012-06-08 17:13:09.000000000 +0100
++++ openjdk/hotspot/make/bsd/makefiles/rules.make	2012-06-12 10:50:20.974290246 +0100
+@@ -128,7 +128,7 @@
+ # Settings for javac
+ BOOT_SOURCE_LANGUAGE_VERSION = 6
+ BOOT_TARGET_CLASS_VERSION = 6
+-JAVAC_FLAGS = -g -encoding ascii
++JAVAC_FLAGS = -g -encoding ascii -J-Xmx256m
+ BOOTSTRAP_JAVAC_FLAGS = $(JAVAC_FLAGS) -source $(BOOT_SOURCE_LANGUAGE_VERSION) -target $(BOOT_TARGET_CLASS_VERSION)
+ 
+ # With parallel makes, print a message at the end of compilation.
+diff -Nru openjdk.orig/hotspot/make/linux/makefiles/rules.make openjdk/hotspot/make/linux/makefiles/rules.make
+--- openjdk.orig/hotspot/make/linux/makefiles/rules.make	2012-06-08 17:13:09.000000000 +0100
++++ openjdk/hotspot/make/linux/makefiles/rules.make	2012-06-12 10:50:20.982290377 +0100
+@@ -128,7 +128,7 @@
+ # Settings for javac
+ BOOT_SOURCE_LANGUAGE_VERSION = 6
+ BOOT_TARGET_CLASS_VERSION = 6
+-JAVAC_FLAGS = -g -encoding ascii
++JAVAC_FLAGS = -g -encoding ascii -J-Xmx256m
+ BOOTSTRAP_JAVAC_FLAGS = $(JAVAC_FLAGS) -source $(BOOT_SOURCE_LANGUAGE_VERSION) -target $(BOOT_TARGET_CLASS_VERSION)
+ 
+ # With parallel makes, print a message at the end of compilation.
+diff -Nru openjdk.orig/hotspot/make/solaris/makefiles/rules.make openjdk/hotspot/make/solaris/makefiles/rules.make
+--- openjdk.orig/hotspot/make/solaris/makefiles/rules.make	2012-06-08 17:13:09.000000000 +0100
++++ openjdk/hotspot/make/solaris/makefiles/rules.make	2012-06-12 10:50:20.982290377 +0100
+@@ -120,7 +120,7 @@
+ # Settings for javac
+ BOOT_SOURCE_LANGUAGE_VERSION = 6
+ BOOT_TARGET_CLASS_VERSION = 6
+-JAVAC_FLAGS = -g -encoding ascii
++JAVAC_FLAGS = -g -encoding ascii -J-Xmx256m
+ BOOTSTRAP_JAVAC_FLAGS = $(JAVAC_FLAGS) -source $(BOOT_SOURCE_LANGUAGE_VERSION) -target $(BOOT_TARGET_CLASS_VERSION)
+ 
+ # With parallel makes, print a message at the end of compilation.
+diff -Nru openjdk.orig/hotspot/make/windows/makefiles/rules.make openjdk/hotspot/make/windows/makefiles/rules.make
+--- openjdk.orig/hotspot/make/windows/makefiles/rules.make	2012-06-08 17:13:09.000000000 +0100
++++ openjdk/hotspot/make/windows/makefiles/rules.make	2012-06-12 10:50:20.982290377 +0100
+@@ -45,7 +45,7 @@
+ # Settings for javac
+ BOOT_SOURCE_LANGUAGE_VERSION=6
+ BOOT_TARGET_CLASS_VERSION=6
+-JAVAC_FLAGS=-g -encoding ascii
++JAVAC_FLAGS=-g -encoding ascii -J-Xmx256m
+ BOOTSTRAP_JAVAC_FLAGS=$(JAVAC_FLAGS) -source $(BOOT_SOURCE_LANGUAGE_VERSION) -target $(BOOT_TARGET_CLASS_VERSION)
+ 
+ ProjectFile=jvm.vcproj
+diff -Nru openjdk.orig/jdk/make/common/shared/Platform.gmk openjdk/jdk/make/common/shared/Platform.gmk
+--- openjdk.orig/jdk/make/common/shared/Platform.gmk	2012-06-08 17:12:17.000000000 +0100
++++ openjdk/jdk/make/common/shared/Platform.gmk	2012-06-12 10:50:20.982290377 +0100
+@@ -537,7 +537,7 @@
+       else \
+         echo "false"; \
+       fi)
+-    MAX_VM_MEMORY := 512
++    MAX_VM_MEMORY := 1536
+     MIN_VM_MEMORY := $(MAX_VM_MEMORY)
+   else
+     MB_OF_MEMORY       := unknown
+diff -Nru openjdk.orig/jdk/make/docs/Makefile openjdk/jdk/make/docs/Makefile
+--- openjdk.orig/jdk/make/docs/Makefile	2012-06-08 17:12:17.000000000 +0100
++++ openjdk/jdk/make/docs/Makefile	2012-06-12 11:09:31.616702981 +0100
+@@ -69,11 +69,11 @@
+ #    NOTE: javadoc will not complete without these larger settings.
+ #    WARNING: This could cause thrashing on low memory machines.
+ ifeq ($(ARCH_DATA_MODEL),64)
+-  MAX_VM_MEMORY = 1024
++  MAX_VM_MEMORY = 1792
+ else ifeq ($(ARCH),universal)
+-  MAX_VM_MEMORY = 1024
++  MAX_VM_MEMORY = 1792
+ else
+-  MAX_VM_MEMORY = 512
++  MAX_VM_MEMORY = 768
+ endif
+ 
+ # List of all possible directories for javadoc to look for sources
+diff -Nru openjdk.orig/langtools/make/build.xml openjdk/langtools/make/build.xml
+--- openjdk.orig/langtools/make/build.xml	2012-06-08 17:12:36.000000000 +0100
++++ openjdk/langtools/make/build.xml	2012-06-12 10:50:20.974290246 +0100
+@@ -796,6 +796,7 @@
                      <compilerarg value="-implicit:none"/>
                      <compilerarg value="-Xprefer:source"/>
                      <compilerarg value="-J-Xbootclasspath/p:@{javac.bootclasspath}"/>
